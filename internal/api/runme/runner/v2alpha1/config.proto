syntax = "proto3";

package runme.runner.v2alpha1;

option go_package = "github.com/stateful/runme/internal/gen/proto/go/runme/runner/v1;runnerv1";

enum CommandMode {
  COMMAND_MODE_UNSPECIFIED = 0;
  COMMAND_MODE_INLINE = 1;
  COMMAND_MODE_FILE = 2;
}

// ProgramConfig is a configuration for a program to execute.
// From this configuration, any program can be built.
message ProgramConfig {
  // program_name is a name of the program to execute.
  // If it's not a path (relative or absolute), the runner
  // will try to resolve the name.
  // For example: "sh", "/bin/bash".
  string program_name = 1;

  // arguments is a list of arguments passed to the program.
  repeated string arguments = 2;

  // directory to execute the program in.
  string directory = 3;

  // env is a list of additional environment variables
  // that will be injected to the executed program.
  repeated string env = 4;

  oneof source {
    // commands are commands to be executed by the program.
    // The commands are joined and executed as a script.
    CommandList commands = 5;

    // script is code to be executed by the program.
    // Individual lines are joined with the new line character.
    string script = 6;
  }

  // interactive, if true, uses a pseudo-tty to execute the program.
  bool interactive = 7;

  // TODO(adamb): understand motivation for this.
  CommandMode mode = 8;

  message CommandList {
    // commands are commands to be executed by the program.
    // The commands are joined and executed as a script.
    // For example: ["echo 'Hello, World'", "ls -l /etc"].
    repeated string items = 1;
  }
}
